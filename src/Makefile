# 
# Unix Makefile for MODFLOW
# Last modified 08/08/95, rsregan
#
# Usage:
# make [BINDIR=path_to_install_to] [install] [| tee makeout]
#
# Examples of values for path_to_install_to are:
#    make BINDIR=/usr/opt/bin
#    make BINDIR=$HOME/bin
#
# If BINDIR is specified, the executable is linked to the specified
# directory.  The default value of BINDIR is ../bin.  Note, the installer
# must have sufficient access rights to delete and then create a link for
# the file modflow in the directory that BINDIR is set to.  If 'install' is
# specified only this link is made (executable must already exist in the
# modflow2.5/bin directory).  If 'install' is not specified, the source is
# recompiled according to the make dependency rules in this file.

# this description file uses the Bourne shell
SHELL = /bin/sh

# Fortran compiler flags (Green Hills):
#   C - check subranges and array bounds
#   u - default data type for undeclareds is undefined
#   g - generate source level symbolic debug information
#  OM - optimization
# (Note: set FFLAGS to: OptM to generate optimized code
#                       DbgF to generate debug code)
# for Solaris use OptM = -fast
# for Silicon Graphics use OptM = -O -32
OptM   = -OM
DbgF   = -C -g
FFLAGS = $(OptM)

# Compiler name
F77    = f77

#*******************************************************************
#***** You should not need to modify anything below this line. *****
#*******************************************************************

PGM    = modflow
OBJS   = $(PGM).o bas1.o bcf3.o sip1.o pcg2.o sor1.o wel1.o riv1.o \
		hfb1.o drn1.o ghb1.o evt1.o rch1.o utl1.o str1.o ibs1.o \
		chd1.o gfd1.o tlk1.o de45.o res1.o

# Default location to link executables on installation
BINDIR = ../bin
BDir   = ../bin
EXE    = $(BDir)/$(PGM)
BIN    = $(BINDIR)/$(PGM)

# Rules
all: chkdir $(EXE) install
	@echo; echo Done making all, files are now up-to-date.

$(EXE): $(OBJS)
	@echo
	$(F77) $(FFLAGS) $(OBJS) -o $@
	strip $@

chkdir:
# Create ../bin directory, if necessary
	@if [ ! -d $(BDir) ]; then \
		mkdir $(BDir); echo Created directory $(BDir); fi

install:
# Create directory for binary, if necessary
	@if [ ! -d $(BINDIR) ]; then \
		mkdir $(BINDIR); echo Created directory $(BINDIR); fi
# Link executable to BINDIR
	@if [ ! -s $(EXE) ]; then \
		echo Executable $(EXE) does not exist,; \
		echo use one of the following commands to generate it:; \
		echo "      make"; echo "      make all"; \
	else \
		if [ $(BINDIR) != $(BDir) ]; then \
			rm -f $(BIN); \
			cd ..; ln -s `pwd`/bin/$(PGM) $(BIN); \
			chmod 755 $(BIN); \
			echo; echo Executable $(BIN) has been updated.; \
			echo; echo Be sure directory $(BINDIR) is in your PATH.; \
		else \
			cd $(BDir); echo; echo Be sure directory `pwd` is in your PATH.; \
		fi; \
	fi

clean:
	@if [ $(BINDIR) != $(BDir) ]; \
		then rm -f $(BIN); \
	fi
	rm -f $(EXE) *.o
	@echo; echo Removed files generated by make.
